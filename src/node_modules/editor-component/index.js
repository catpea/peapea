const {EditorState, EditorView, basicSetup } = require("@codemirror/basic-setup");
const {javascript} = require("@codemirror/lang-javascript");
const {oneDark} = require("@codemirror/theme-one-dark");
const {defaultTabBinding} = require("@codemirror/commands");
const {keymap} = require("@codemirror/view");

module.exports = function(){
  return component;
}

function component( container, componentState ){
  let editor;
  container.on( 'open', function(){ //Emitted after the item has been sized and added to the DOM. Useful if you're working with an UI library that measures its container on startup.
    container.element.style.overflow = 'auto';
    editor = new EditorView({
      state: EditorState.create({
        doc: componentState.doc||'',
        extensions: [basicSetup, javascript(), oneDark, keymap.of([defaultTabBinding]) ]
      }),
      parent: container.element,
    }); //

  })


}
